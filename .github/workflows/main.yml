# Benchmark libgit2 against the git reference implementation.
name: Benchmark

on:
  push:
    branches: [ main, maint/* ]
  pull_request:
    branches: [ main, maint/* ]
  workflow_dispatch:
  schedule:
  - cron: '15 4 * * *'

jobs:
  # Run our nightly builds.  We build a matrix with the various build
  # targets and their details.  Then we build either in a docker container
  # (Linux) or on the actual hosts (macOS, Windows).
  build:
    strategy:
      matrix:
        platform:
        - name: "Linux (GCC, OpenSSL)"
          env:
            CC: gcc
            CMAKE_OPTIONS: -DUSE_HTTPS=OpenSSL -DREGEX_BACKEND=builtin -DDEPRECATE_HARD=ON -DUSE_GSSAPI=ON -DBUILD_TESTS=OFF -DBUILD_EXAMPLES=OFF -DBUILD_CLI=ON
          os: ubuntu-latest
          setup-script: ubuntu
#        - name: "macOS"
#          os: macos-10.15
#          env:
#            CC: clang
#            CMAKE_OPTIONS: -DREGEX_BACKEND=regcomp_l -DDEPRECATE_HARD=ON -DUSE_GSSAPI=ON -DBUILD_TESTS=OFF -DBUILD_EXAMPLES=OFF -DBUILD_CLI=ON
#            PKG_CONFIG_PATH: /usr/local/opt/openssl/lib/pkgconfig
#          setup-script: osx
#        - name: "Windows (amd64, Visual Studio)"
#          os: windows-2019
#          env:
#            ARCH: amd64
#            CMAKE_GENERATOR: Visual Studio 16 2019
#            CMAKE_OPTIONS: -A x64 -DDEPRECATE_HARD=ON -DBUILD_TESTS=OFF -DBUILD_EXAMPLES=OFF -DBUILD_CLI=ON
#          setup-script: win32
      fail-fast: false
    name: "Build ${{ matrix.platform.name }}"
    env: ${{ matrix.platform.env }}
    runs-on: ${{ matrix.platform.os }}
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        path: source
        fetch-depth: 0
    - name: Set up benchmark environment
      run: source/ci/setup-${{ matrix.platform.setup-script }}-benchmark.sh
      shell: bash
      if: matrix.platform.setup-script != ''
    - name: Build
      run: |
        mkdir build && cd build
        ../source/ci/build.sh
      shell: bash
    - name: Benchmark
      run: |
        mkdir benchmark && cd benchmark
        ../source/ci/benchmark.sh
      shell: bash
    - name: Upload results
      uses: actions/upload-artifact@v2
      with:
        name: results
        path: benchmark/results.*
